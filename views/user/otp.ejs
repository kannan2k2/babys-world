<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>OTP Verification</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
  <style>
    .otp-field {
      flex-direction: row;
      column-gap: 10px;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .otp-field input {
      height: 45px;
      width: 42px;
      border-radius: 6px;
      outline: none;
      font-size: 1.125rem;
      text-align: center;
      border: 1px solid #ddd;
    }
    .otp-field input:focus {
      box-shadow: 0 1px 0 rgba(0, 0, 0, 0.1);
    }
    .otp-field input::-webkit-inner-spin-button,
    .otp-field input::-webkit-outer-spin-button {
      display: none;
    }

    .resend {
      font-size: 12px;
    }
    .custom-btn {
      background-color: #b35353; /* Light pink background */
      border-color:  #b35353; /* Light pink border */
      color: white; /* White text */
    }

    .custom-btn:hover {
      background-color: #b35353; /* Slightly darker pink on hover */
      border-color: #b35353; /* Slightly darker pink border on hover */
    }
  </style>
</head>
<body class="container-fluid bg-body-tertiary d-block">
  <div class="row justify-content-center">
    <div class="col-12 col-md-6 col-lg-4" style="min-width: 500px;">
      <div class="card bg-white mb-5 mt-5 border-0" style="box-shadow: 0 12px 15px rgba(0, 0, 0, 0.02);">
        <div class="card-body p-5 text-center">
          <h4>Verify</h4>
          <p>Your code was sent to you email</p>
          <div id="alert-container" style="display:none;">
            <!-- <div class="alert alert-success" role="alert">
              OTP submitted successfully!
            </div> -->
          </div>
          
          <form action="/otppost" method="post" id="otpForm">
            <div class="otp-field mb-4">
              <input type="text" name="otp1" maxlength="1" required />
              <input type="text" name="otp2" maxlength="1" required disabled />
              <input type="text" name="otp3" maxlength="1" required disabled />
              <input type="text" name="otp4" maxlength="1" required disabled />
              <input type="text" name="otp5" maxlength="1" required disabled />
              <input type="text" name="otp6" maxlength="1" required disabled />
            </div>
            <button type="submit" class="btn btn-primary mb-3 custom-btn">Verify</button>
          </form>
          
          <div>
            <% if (message) { %>
              <p class="message"><%= message %></p>
            <% } %>
          </div>
          
          <p class="resend text-muted mb-0">
            Didn't receive code? <span id="timer">Resend code in 59 seconds</span> 
            <a href="/resendOtp" id="resendLink" style="display:none;">Request again</a>

          </p>
          
          
        </div>
      </div>
    </div>
  </div>

  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const inputs = document.querySelectorAll(".otp-field input");
      const form = document.getElementById("otpForm");
      const alertContainer = document.getElementById("alert-container");
  
      inputs.forEach((input, index) => {
        input.addEventListener("input", () => {
          if (input.value.length === input.maxLength) {
            if (index < inputs.length - 1) {
              inputs[index + 1].removeAttribute('disabled');
              inputs[index + 1].focus();
            }
          }
        });
  
        input.addEventListener("keydown", (e) => {
          if (e.key === "Backspace" && input.value === "") {
            if (index > 0) {
              inputs[index - 1].focus();
            }
          }
        });
      });
  
      inputs[0].focus();
  
      form.addEventListener("submit", (e) => {
        e.preventDefault(); // Prevent the form from submitting immediately
        alertContainer.style.display = 'block';
        setTimeout(() => {
          form.submit(); 
        }, 2000); 
      });
  
      // Timer logic
      const timerElement = document.getElementById('timer');
      const resendLink = document.getElementById('resendLink');
      
      // Check localStorage for remaining time
      let timeLeft = localStorage.getItem('otpTimer') ? parseInt(localStorage.getItem('otpTimer')) : 59;
  
      // Update the timer display immediately
      timerElement.textContent = `Resend code in ${timeLeft} seconds`;
  
      const timer = setInterval(() => {
        if (timeLeft > 0) {
          timeLeft--;
          localStorage.setItem('otpTimer', timeLeft); // Save remaining time
          timerElement.textContent = `Resend code in ${timeLeft} seconds`;
        } else {
          clearInterval(timer);
          localStorage.removeItem('otpTimer'); // Clear timer from localStorage
          timerElement.style.display = 'none';
          resendLink.style.display = 'inline';
        }
      }, 1000);
    });
  </script>
  
</body>
</html>
